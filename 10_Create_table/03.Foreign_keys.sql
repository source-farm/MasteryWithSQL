-- Внешний ключ (foreign key) - это поле таблицы, значение которой
-- берётся из поля другой таблицы и это поле должно быть либо основным
-- ключом либо должно содержать только уникальные значения. В отличие
-- от основного ключа внешний ключ может содержать NULL.

drop schema playground cascade;

create schema playground;

create table playground.users (
    email      varchar(100),
    first_name varchar(100),
    last_name  varchar(100),
    is_active  boolean,
    constraint pk_users primary key (email)
);

create table playground.notes (
    note_id    bigint generated by default as identity primary key,
    note       text,
    -- Создание внешнего ключа.
    user_email varchar(100) references playground.users (email)
);

create table playground.note_tags (
    note_id bigint,
    tag     text,
    primary key (note_id, tag),
    -- Создание внешнего ключа как констрейнта таблицы.
    foreign key (note_id) references playground.notes (note_id)
);

-- Добавляем одну запись в таблицу.
insert into playground.users (email, first_name, last_name, is_active)
     values ('neil@masterywithdata.com', 'neil', 'sainsbury', true);
-- Следующий запрос не сработает, т.к. в таблице playground.users
-- нет пользователя с почтовым ящиком test@test.com:
insert into playground.notes (note, user_email)
     values ('remember to pick up milk', 'test@test.com');

insert into playground.notes (note, user_email)
     values ('remember to pick up milk', 'neil@masterywithdata.com');
-- Следующий запрос не сработает, т.к. на пользователя neil@masterywithdata.com
-- ссылаются из таблицы playground.notes. То же самое будет, если попытаться
-- удалить запись с полем email равным neil@masterywithdata.com из таблицы
-- playground.users.
update playground.users
   set email = 'test@test.com'
 where email = 'neil@masterywithdata.com';
-- Если нам всё же нужно удалить пользователя из таблицы playground.users, на
-- которого ссылаются из других таблиц, то сначала нужно удалить все данные
-- из этих таблиц, а после и самого пользователя. Если на эти другие таблицы
-- ссылаются ещё какие-либо третьи, то сначала нужно удалить данные в третьих
-- таблицах, затем в других и в конце в таблице playground.users. Т.е. цепочка
-- начинается с таблиц, на данные в которых никто не ссылается.

-- Для обновления (update) записи, на которую ссылаются другие таблицы, можно
-- временно отключить ограничение внешнего ключа, выполнить обновление и затем
-- включить внешний ключ. Можно также воспользоваться так называемым writable CTE.

-- PostgreSQL поддерживает также механизм каскадного обновления данных. Например,
-- при удалении какого-либо пользователя в таблице playground.users, все его
-- записи также будут удалены из таблицы playground.notes и если запись имела
-- теги, то они также будут удалены из таблицы playground.note_tags. Т.е.
-- изменения как бы проходят каскадом по всей базе данных. На необходимость
-- каскадных изменений указывается при создании внешнего ключа таблицы:
create table playground.notes (
    note_id    bigint generated by default as identity primary key,
    note       text,
    user_email varchar(100) references playground.users (email)
               on update cascade
               on delete cascade
);

create table playground.note_tags (
    note_id bigint,
    tag     text,
    primary key (note_id, tag),
    foreign key (note_id) references playground.notes (note_id)
                          on update cascade
                          on delete cascade
);

insert into playground.users (email, first_name, last_name, is_active)
     values ('neil@masterywithdata.com', 'neil', 'sainsbury', true);
insert into playground.notes (note, user_email)
     values ('remember to pick up milk', 'neil@masterywithdata.com');
-- На этот раз следующий запрос сработает, т.к. мы определили каскадные
-- изменения при обновлении внешнего ключа в таблице playground.notes.
update playground.users
   set email = 'test@test.com'
 where email = 'neil@masterywithdata.com';

-- В обеих таблицах playground.users и playground.notes почтовый ящик
-- изменился с neil@masterywithdata.com на test@test.com:
select * from playground.users;
select * from playground.notes;

-- При удалении пользователя будут также удалены все ссылки на него
-- из других таблиц.
