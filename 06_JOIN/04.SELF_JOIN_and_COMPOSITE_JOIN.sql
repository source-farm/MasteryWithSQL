-- Запрос для получения всеможных пар клиентов.
-- Это пример так называемого SELF JOIN'а.
    select c1.first_name || ' ' || c1.last_name, c2.first_name || ' ' || c2.last_name
      from customer as c1
inner join customer as c2 on c1.customer_id > c2.customer_id;
-- Чтобы понять почему этот пример работает можно рассмотреть таблицу поменьше, которая
-- состоит только из трёх строк с значениями 1, 2 и 3.
-- Как мы уже знаем первым шагом на пути к INNER JOIN является CROSS JOIN. После выполнения
-- CROSS JOIN нашу таблицу можно представить в таком виде:
--
-- C    1    2    3
-- 1   11   12   13
-- 2   21   22   23
-- 3   31   32   33
--
-- Т.е. мы получим таблицу из 9 строк с значениями 11, 12 и т.д. Теперь можно увидеть
-- что для получения всеможных пар без повторений нам нужны элементы выше главной диагонали,
-- что и позволяет получить условие c1.customer_id > c2.customer_id.

-- До сих пор мы рассматривали JOIN'ы, в которых было только одно условие. Если их несколько,
-- то такие JOIN'ы называют композитными (composite).
-- Следующий запрос находит всевозможные пары клиентов, но только между тремя первыми
-- клиентами:
    select c1.first_name || ' ' || c1.last_name, c2.first_name || ' ' || c2.last_name
      from customer as c1
inner join customer as c2 on c1.customer_id > c2.customer_id and c1.customer_id <= 3 and c2.customer_id <= 3;
