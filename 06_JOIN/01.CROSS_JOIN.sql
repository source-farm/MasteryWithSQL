-- CROSS JOIN можно рассматривать как первый шаг при выполнении других видов JOIN'ов.
-- По-другому его называют декартовым (cartesian) произведением.
-- Сначала рассмотрим простой пример декартова произведения между двумя таблицами.
-- Пусть таблица T1 и T2 состоят из одной колонки и трёх строк и имеют следующий вид:
--
--     T1 T2
--     -----
--      1  A
--      2  B
--      3  C
--
-- Тогда декартово произведение этих таблиц, т.е. CROSS JOIN, который обозначают как T1xT2,
-- равен следующей таблице:
--
--     T1xT2
--     -----
--        1A
--        1B
--        1C
--        2A
--        2B
--        2C
--        3A
--        3B
--        3C

-- Т.е. CROSS JOIN создаёт новую таблицу, объединяя каждую строку таблицы T1 c каждой
-- строкой таблицы T2. Т.е. общее количество строк в результирующей таблице равно
-- произведению количества строк в первой таблице на количество строк во второй.

-- Пример простейшего CROSS JOIN'а:
    select *
      from film
cross join store;

-- В этом примере находится декартово произведение таблицы film и таблицы store и в
-- результирующую таблицу входят все колонки каждой таблицы. Количество строк в таблице
-- film равно 1000, а в store - 2. В итоге получается таблица размером 2000 строк.

-- Чтобы более явно увидеть, что каждая строка таблицы film объединяется с каждой
-- строкой таблицы store при выполнении CROSS JOIN'а, можно выполнить следующий запрос:
    select film_id, store_id
      from film
cross join store
  order by film_id, store_id;

-- Если при выполнении CROSS JOIN'а какой-либо столбец есть в обеих таблицах, то
-- нужно перед названием колонки указать имя таблицы (или псевдоним). Следующий
-- запрос не выполнится, т.к. колонка email есть в таблицах customer и staff и
-- мы не указали из какой именно таблицы нужно её брать:
    select customer_id, staff_id, email
      from customer
cross join staff;

-- Следующий запрос исправляет эту ошибку:
    select customer.customer_id, staff.staff_id, customer.email
      from customer
cross join staff;

-- Конечно можно взять email из обеих таблиц:
    select customer.customer_id, staff.staff_id, customer.email, staff.email
      from customer
cross join staff;

-- Можно дать таблицам псевдонимы, чтобы не набирать полностью их названия каждый раз:
    select c.customer_id, s.staff_id, c.email, s.email
      from customer as c
cross join staff as s;

-- Считается хорошей практикой полностью указывать (fully qualify) путь до колонки,
-- даже если она встречается только в одной таблице.
