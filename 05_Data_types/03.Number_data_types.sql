--------------------------------------------------------------------------------
-- Целочисленные типы
--------------------------------------------------------------------------------

-- Для хранения целочисленных значений в PostgreSQL используется 3 типа:
-- smallint - число со знаком размера 2 байт
-- integer  - число со знаком размера 4 байт
-- bigint   - число со знаком размера 8 байт

-- Часто используют и псевдонимы этих типов:
-- smallint - int2
-- integer  - int или int4
-- bigint   - int8

-- При делении целых чисел получается целочисленный результат:
select 3/2;

-- Тип значений можно узнать с помощью функции pg_typeof:
select pg_typeof(3), pg_typeof(2), pg_typeof(3/2);

-- Есть несколько способов для явного преобразования (coercing, casting, type promotion)
-- значения в какой-либо другой тип. Рассмотрим на примере преобразования строки в тип int:
select
    int '42',          -- decorated literal format
    '42'::int,         -- PostgreSQL-specific way
    cast('42' as int); -- standard way

-- Все приведённые 3 способа эквивалентны.

-- Иногда преобразование типов происходит неявно. В следующем запросе
-- число 42 преобразуется в значения типа numeric, т.е. в тип значения 1.0:
select 42/1.0, pg_typeof(1.0) as "type of 1.0", pg_typeof(42/1.0) as "type of 42/1.0";

--------------------------------------------------------------------------------
-- Вещественные числа фиксированной точности
--------------------------------------------------------------------------------

-- Для хранения дробных значений есть тип numeric:

-- numeric(precision, scale) - precision - это максимальное количество цифр в значении,
--                             а scale - сколько цифр должно быть после запятой.
-- decimal(precision, scale) означает то же самое, что и numeric(precision, scale).

-- numeric(5,2), например, позволяет хранить значения 999.99, 000.00, 123.45, но не 3000.
select 999.99::numeric(5,2);
-- select 3000::numeric(5,2); -- ошибка

--------------------------------------------------------------------------------
-- Вещественные числа в плавающей запятой
--------------------------------------------------------------------------------

-- Для работы с вещественными значениями с плавающей запятой в PostgreSQL есть 2 типа:
-- real
-- double precision
